
<launch>
  <!-- FULL launch commands -->
  <!-- roslaunch slam_exploration slam_exploration.launch -->

  <arg name="mav_name" default="firefly"/>
  <arg name="time_now" default="temp" />

  <!-- ARDRONE -->
  <include file="$(find ardrone_autonomy)/launch/ardrone.launch"/>

  <!-- CONTROLLER  -->
  <group ns="$(arg mav_name)">
  <!-- Launch your nodes here. Extend / adapt for the subtask at hand, if necessary. -->
    <node name="controller" pkg="rotors_exercise" type="controller_node" clear_params="true" output="screen">
      <remap from="pose_with_covariance" to="ground_truth/pose_with_covariance"/>
      <remap from="imu" to="/ardrone/imu" />

      <param name="cog_z" type="double" value="0.08" />
      <param name="filtering" type="bool" value="true" />
      <param name="enable_ros_info" type="bool" value="true" />

      <rosparam file="$(find rotors_exercise)/controller.yaml"/>
    </node>
  </group>

  <!-- WAYPOINT publisher -->
  <group ns="$(arg mav_name)">
    <node name="waypoint_generator" pkg="slam_exploration" type="waypoint_generator_node" output="screen">
      <remap from="imu" to="/ardrone/imu" />
    </node>
  </group>

  <!-- ORB SLAM Life -->
  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find slam_exploration)/rviz/orb_slam2_config.rviz"/>

  <node name="orb_slam2_mono" pkg="orb_slam2_ros"
        type="orb_slam2_ros_mono" args="
                $(find orb_slam2_ros)/orb_slam2/Vocabulary/ORBvoc.txt
                $(find slam_exploration)/resource/ARDroneFrontCamera.yaml"
        output="screen">

    <remap from="/camera/image_raw" to="ardrone/front/image_raw" />
    <param name="use_sim_time" value="false" />
    <param name="publish_pointcloud" type="bool" value="true" />
    <param name="publish_pose" type="bool" value="true" />
    <param name="pointcloud_frame_id" type="string" value="map" />
    <param name="camera_frame_id" type="string" value="camera_link" />
  </node>
</launch>
